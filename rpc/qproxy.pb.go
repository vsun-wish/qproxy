// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: rpc/qproxy.proto

package rpc

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueueId_QueueType int32

const (
	QueueId_Standard QueueId_QueueType = 0
	QueueId_Fifo     QueueId_QueueType = 1
)

// Enum value maps for QueueId_QueueType.
var (
	QueueId_QueueType_name = map[int32]string{
		0: "Standard",
		1: "Fifo",
	}
	QueueId_QueueType_value = map[string]int32{
		"Standard": 0,
		"Fifo":     1,
	}
)

func (x QueueId_QueueType) Enum() *QueueId_QueueType {
	p := new(QueueId_QueueType)
	*p = x
	return p
}

func (x QueueId_QueueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueId_QueueType) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_qproxy_proto_enumTypes[0].Descriptor()
}

func (QueueId_QueueType) Type() protoreflect.EnumType {
	return &file_rpc_qproxy_proto_enumTypes[0]
}

func (x QueueId_QueueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueId_QueueType.Descriptor instead.
func (QueueId_QueueType) EnumDescriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{0, 0}
}

type QueueId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace"`
	Name      string            `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	Type      QueueId_QueueType `protobuf:"varint,3,opt,name=Type,proto3,enum=rpc.QueueId_QueueType" json:"Type"`
}

func (x *QueueId) Reset() {
	*x = QueueId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueId) ProtoMessage() {}

func (x *QueueId) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueId.ProtoReflect.Descriptor instead.
func (*QueueId) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{0}
}

func (x *QueueId) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *QueueId) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueueId) GetType() QueueId_QueueType {
	if x != nil {
		return x.Type
	}
	return QueueId_Standard
}

type ListQueuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace"`
	Filter     string `protobuf:"bytes,2,opt,name=Filter,proto3" json:"Filter"`
	RPCTimeout int64  `protobuf:"varint,100,opt,name=RPCTimeout,proto3" json:"RPCTimeout"`
}

func (x *ListQueuesRequest) Reset() {
	*x = ListQueuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQueuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuesRequest) ProtoMessage() {}

func (x *ListQueuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuesRequest.ProtoReflect.Descriptor instead.
func (*ListQueuesRequest) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{1}
}

func (x *ListQueuesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListQueuesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListQueuesRequest) GetRPCTimeout() int64 {
	if x != nil {
		return x.RPCTimeout
	}
	return 0
}

type ListQueuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queues []*QueueId `protobuf:"bytes,1,rep,name=Queues,proto3" json:"Queues"`
}

func (x *ListQueuesResponse) Reset() {
	*x = ListQueuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQueuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuesResponse) ProtoMessage() {}

func (x *ListQueuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuesResponse.ProtoReflect.Descriptor instead.
func (*ListQueuesResponse) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{2}
}

func (x *ListQueuesResponse) GetQueues() []*QueueId {
	if x != nil {
		return x.Queues
	}
	return nil
}

type GetQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *QueueId `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id"`
	RPCTimeout int64    `protobuf:"varint,100,opt,name=RPCTimeout,proto3" json:"RPCTimeout"`
}

func (x *GetQueueRequest) Reset() {
	*x = GetQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueRequest) ProtoMessage() {}

func (x *GetQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueRequest.ProtoReflect.Descriptor instead.
func (*GetQueueRequest) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{3}
}

func (x *GetQueueRequest) GetId() *QueueId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetQueueRequest) GetRPCTimeout() int64 {
	if x != nil {
		return x.RPCTimeout
	}
	return 0
}

type GetQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes map[string]string `protobuf:"bytes,1,rep,name=Attributes,proto3" json:"Attributes" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetQueueResponse) Reset() {
	*x = GetQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueResponse) ProtoMessage() {}

func (x *GetQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueResponse.ProtoReflect.Descriptor instead.
func (*GetQueueResponse) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{4}
}

func (x *GetQueueResponse) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type CreateQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *QueueId          `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id"`
	Attributes map[string]string `protobuf:"bytes,2,rep,name=Attributes,proto3" json:"Attributes" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RPCTimeout int64             `protobuf:"varint,100,opt,name=RPCTimeout,proto3" json:"RPCTimeout"`
}

func (x *CreateQueueRequest) Reset() {
	*x = CreateQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueRequest) ProtoMessage() {}

func (x *CreateQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueRequest.ProtoReflect.Descriptor instead.
func (*CreateQueueRequest) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{5}
}

func (x *CreateQueueRequest) GetId() *QueueId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CreateQueueRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CreateQueueRequest) GetRPCTimeout() int64 {
	if x != nil {
		return x.RPCTimeout
	}
	return 0
}

type CreateQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateQueueResponse) Reset() {
	*x = CreateQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueResponse) ProtoMessage() {}

func (x *CreateQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueResponse.ProtoReflect.Descriptor instead.
func (*CreateQueueResponse) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{6}
}

type DeleteQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *QueueId `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id"`
	RPCTimeout int64    `protobuf:"varint,100,opt,name=RPCTimeout,proto3" json:"RPCTimeout"`
}

func (x *DeleteQueueRequest) Reset() {
	*x = DeleteQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueRequest) ProtoMessage() {}

func (x *DeleteQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueRequest.ProtoReflect.Descriptor instead.
func (*DeleteQueueRequest) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteQueueRequest) GetId() *QueueId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DeleteQueueRequest) GetRPCTimeout() int64 {
	if x != nil {
		return x.RPCTimeout
	}
	return 0
}

type DeleteQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteQueueResponse) Reset() {
	*x = DeleteQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueResponse) ProtoMessage() {}

func (x *DeleteQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueResponse.ProtoReflect.Descriptor instead.
func (*DeleteQueueResponse) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{8}
}

type ModifyQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *QueueId          `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id"`
	Attributes map[string]string `protobuf:"bytes,2,rep,name=Attributes,proto3" json:"Attributes" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RPCTimeout int64             `protobuf:"varint,100,opt,name=RPCTimeout,proto3" json:"RPCTimeout"`
}

func (x *ModifyQueueRequest) Reset() {
	*x = ModifyQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyQueueRequest) ProtoMessage() {}

func (x *ModifyQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyQueueRequest.ProtoReflect.Descriptor instead.
func (*ModifyQueueRequest) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{9}
}

func (x *ModifyQueueRequest) GetId() *QueueId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ModifyQueueRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ModifyQueueRequest) GetRPCTimeout() int64 {
	if x != nil {
		return x.RPCTimeout
	}
	return 0
}

type ModifyQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyQueueResponse) Reset() {
	*x = ModifyQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyQueueResponse) ProtoMessage() {}

func (x *ModifyQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyQueueResponse.ProtoReflect.Descriptor instead.
func (*ModifyQueueResponse) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{10}
}

type PurgeQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *QueueId `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id"`
	RPCTimeout int64    `protobuf:"varint,100,opt,name=RPCTimeout,proto3" json:"RPCTimeout"`
}

func (x *PurgeQueueRequest) Reset() {
	*x = PurgeQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgeQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeQueueRequest) ProtoMessage() {}

func (x *PurgeQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeQueueRequest.ProtoReflect.Descriptor instead.
func (*PurgeQueueRequest) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{11}
}

func (x *PurgeQueueRequest) GetId() *QueueId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PurgeQueueRequest) GetRPCTimeout() int64 {
	if x != nil {
		return x.RPCTimeout
	}
	return 0
}

type PurgeQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PurgeQueueResponse) Reset() {
	*x = PurgeQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgeQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeQueueResponse) ProtoMessage() {}

func (x *PurgeQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeQueueResponse.ProtoReflect.Descriptor instead.
func (*PurgeQueueResponse) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{12}
}

type MessageReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage"`
}

func (x *MessageReceipt) Reset() {
	*x = MessageReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReceipt) ProtoMessage() {}

func (x *MessageReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReceipt.ProtoReflect.Descriptor instead.
func (*MessageReceipt) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{13}
}

func (x *MessageReceipt) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageReceipt) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type FailedPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index        int64  `protobuf:"varint,1,opt,name=Index,proto3" json:"Index"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage"`
}

func (x *FailedPublish) Reset() {
	*x = FailedPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FailedPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailedPublish) ProtoMessage() {}

func (x *FailedPublish) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailedPublish.ProtoReflect.Descriptor instead.
func (*FailedPublish) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{14}
}

func (x *FailedPublish) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *FailedPublish) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       string            `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data"`
	Attributes map[string]string `protobuf:"bytes,2,rep,name=Attributes,proto3" json:"Attributes" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Receipt    *MessageReceipt   `protobuf:"bytes,100,opt,name=Receipt,proto3" json:"Receipt"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{15}
}

func (x *Message) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Message) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Message) GetReceipt() *MessageReceipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

type AckMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId    *QueueId          `protobuf:"bytes,1,opt,name=QueueId,proto3" json:"QueueId"`
	Receipts   []*MessageReceipt `protobuf:"bytes,2,rep,name=Receipts,proto3" json:"Receipts"`
	RPCTimeout int64             `protobuf:"varint,100,opt,name=RPCTimeout,proto3" json:"RPCTimeout"`
}

func (x *AckMessagesRequest) Reset() {
	*x = AckMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessagesRequest) ProtoMessage() {}

func (x *AckMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessagesRequest.ProtoReflect.Descriptor instead.
func (*AckMessagesRequest) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{16}
}

func (x *AckMessagesRequest) GetQueueId() *QueueId {
	if x != nil {
		return x.QueueId
	}
	return nil
}

func (x *AckMessagesRequest) GetReceipts() []*MessageReceipt {
	if x != nil {
		return x.Receipts
	}
	return nil
}

func (x *AckMessagesRequest) GetRPCTimeout() int64 {
	if x != nil {
		return x.RPCTimeout
	}
	return 0
}

type AckMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the receipts that failed to ack
	Failed []*MessageReceipt `protobuf:"bytes,1,rep,name=Failed,proto3" json:"Failed"`
}

func (x *AckMessagesResponse) Reset() {
	*x = AckMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessagesResponse) ProtoMessage() {}

func (x *AckMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessagesResponse.ProtoReflect.Descriptor instead.
func (*AckMessagesResponse) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{17}
}

func (x *AckMessagesResponse) GetFailed() []*MessageReceipt {
	if x != nil {
		return x.Failed
	}
	return nil
}

type GetMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId *QueueId `protobuf:"bytes,1,opt,name=QueueId,proto3" json:"QueueId"`
	// How long to poll for up to MaxMessages messages. 0 implies return immediately
	LongPollSeconds    int64 `protobuf:"varint,2,opt,name=LongPollSeconds,proto3" json:"LongPollSeconds"`
	MaxMessages        int64 `protobuf:"varint,3,opt,name=MaxMessages,proto3" json:"MaxMessages"`
	AckDeadlineSeconds int64 `protobuf:"varint,4,opt,name=AckDeadlineSeconds,proto3" json:"AckDeadlineSeconds"`
	RPCTimeout         int64 `protobuf:"varint,100,opt,name=RPCTimeout,proto3" json:"RPCTimeout"`
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{18}
}

func (x *GetMessagesRequest) GetQueueId() *QueueId {
	if x != nil {
		return x.QueueId
	}
	return nil
}

func (x *GetMessagesRequest) GetLongPollSeconds() int64 {
	if x != nil {
		return x.LongPollSeconds
	}
	return 0
}

func (x *GetMessagesRequest) GetMaxMessages() int64 {
	if x != nil {
		return x.MaxMessages
	}
	return 0
}

func (x *GetMessagesRequest) GetAckDeadlineSeconds() int64 {
	if x != nil {
		return x.AckDeadlineSeconds
	}
	return 0
}

func (x *GetMessagesRequest) GetRPCTimeout() int64 {
	if x != nil {
		return x.RPCTimeout
	}
	return 0
}

type GetMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*Message `protobuf:"bytes,1,rep,name=Messages,proto3" json:"Messages"`
}

func (x *GetMessagesResponse) Reset() {
	*x = GetMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesResponse) ProtoMessage() {}

func (x *GetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{19}
}

func (x *GetMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type PublishMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId    *QueueId   `protobuf:"bytes,1,opt,name=QueueId,proto3" json:"QueueId"`
	Messages   []*Message `protobuf:"bytes,2,rep,name=Messages,proto3" json:"Messages"`
	RPCTimeout int64      `protobuf:"varint,100,opt,name=RPCTimeout,proto3" json:"RPCTimeout"`
}

func (x *PublishMessagesRequest) Reset() {
	*x = PublishMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMessagesRequest) ProtoMessage() {}

func (x *PublishMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMessagesRequest.ProtoReflect.Descriptor instead.
func (*PublishMessagesRequest) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{20}
}

func (x *PublishMessagesRequest) GetQueueId() *QueueId {
	if x != nil {
		return x.QueueId
	}
	return nil
}

func (x *PublishMessagesRequest) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *PublishMessagesRequest) GetRPCTimeout() int64 {
	if x != nil {
		return x.RPCTimeout
	}
	return 0
}

type PublishMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the indexes of the messages that failed to send
	Failed []*FailedPublish `protobuf:"bytes,1,rep,name=Failed,proto3" json:"Failed"`
}

func (x *PublishMessagesResponse) Reset() {
	*x = PublishMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMessagesResponse) ProtoMessage() {}

func (x *PublishMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMessagesResponse.ProtoReflect.Descriptor instead.
func (*PublishMessagesResponse) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{21}
}

func (x *PublishMessagesResponse) GetFailed() []*FailedPublish {
	if x != nil {
		return x.Failed
	}
	return nil
}

type ModifyAckDeadlineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId            *QueueId        `protobuf:"bytes,1,opt,name=QueueId,proto3" json:"QueueId"`
	Receipt            *MessageReceipt `protobuf:"bytes,2,opt,name=Receipt,proto3" json:"Receipt"`
	AckDeadlineSeconds int64           `protobuf:"varint,3,opt,name=AckDeadlineSeconds,proto3" json:"AckDeadlineSeconds"`
	RPCTimeout         int64           `protobuf:"varint,100,opt,name=RPCTimeout,proto3" json:"RPCTimeout"`
}

func (x *ModifyAckDeadlineRequest) Reset() {
	*x = ModifyAckDeadlineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyAckDeadlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyAckDeadlineRequest) ProtoMessage() {}

func (x *ModifyAckDeadlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyAckDeadlineRequest.ProtoReflect.Descriptor instead.
func (*ModifyAckDeadlineRequest) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{22}
}

func (x *ModifyAckDeadlineRequest) GetQueueId() *QueueId {
	if x != nil {
		return x.QueueId
	}
	return nil
}

func (x *ModifyAckDeadlineRequest) GetReceipt() *MessageReceipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

func (x *ModifyAckDeadlineRequest) GetAckDeadlineSeconds() int64 {
	if x != nil {
		return x.AckDeadlineSeconds
	}
	return 0
}

func (x *ModifyAckDeadlineRequest) GetRPCTimeout() int64 {
	if x != nil {
		return x.RPCTimeout
	}
	return 0
}

type ModifyAckDeadlineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyAckDeadlineResponse) Reset() {
	*x = ModifyAckDeadlineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyAckDeadlineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyAckDeadlineResponse) ProtoMessage() {}

func (x *ModifyAckDeadlineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyAckDeadlineResponse.ProtoReflect.Descriptor instead.
func (*ModifyAckDeadlineResponse) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{23}
}

type HealthcheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthcheckRequest) Reset() {
	*x = HealthcheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthcheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthcheckRequest) ProtoMessage() {}

func (x *HealthcheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthcheckRequest.ProtoReflect.Descriptor instead.
func (*HealthcheckRequest) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{24}
}

type HealthcheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthcheckResponse) Reset() {
	*x = HealthcheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_qproxy_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthcheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthcheckResponse) ProtoMessage() {}

func (x *HealthcheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_qproxy_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthcheckResponse.ProtoReflect.Descriptor instead.
func (*HealthcheckResponse) Descriptor() ([]byte, []int) {
	return file_rpc_qproxy_proto_rawDescGZIP(), []int{25}
}

var File_rpc_qproxy_proto protoreflect.FileDescriptor

var file_rpc_qproxy_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x70, 0x63, 0x2f, 0x71, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x2e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x23, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69,
	0x66, 0x6f, 0x10, 0x01, 0x22, 0x69, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22,
	0x3a, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x49, 0x64, 0x52, 0x06, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x98, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xda, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x52, 0x02, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0a,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22,
	0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x52, 0x02, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0a, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x15, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x11, 0x50, 0x75,
	0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x14, 0x0a,
	0x12, 0x50, 0x75, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x49, 0x0a, 0x0d, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x8d, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x52, 0x07, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0x42, 0x0a, 0x13, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x06, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x22, 0xd8, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x52, 0x07, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x6f, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x6c, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x4c, 0x6f,
	0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x12, 0x41, 0x63, 0x6b, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x41, 0x63, 0x6b,
	0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22,
	0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x8a, 0x01, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x52, 0x07, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x52, 0x50, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x45, 0x0a,
	0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x06, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x18, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41,
	0x63, 0x6b, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64,
	0x52, 0x07, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52,
	0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x63, 0x6b, 0x44,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x41, 0x63, 0x6b, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x50, 0x43, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x50,
	0x43, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x41, 0x63, 0x6b, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xf5, 0x08, 0x0a, 0x06, 0x51, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x61, 0x0a,
	0x0a, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x30, 0x01,
	0x12, 0x57, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x14, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x67, 0x65,
	0x74, 0x71, 0x75, 0x65, 0x75, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x63,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x17, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x71, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x5f, 0x0a, 0x0a, 0x50, 0x75, 0x72, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x72,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22,
	0x15, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x75, 0x72, 0x67,
	0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x0b, 0x41, 0x63, 0x6b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f,
	0x61, 0x63, 0x6b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x63,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x17, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x71,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x7b, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x41, 0x63, 0x6b, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x63, 0x6b, 0x44, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x63, 0x6b, 0x44, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x61, 0x63, 0x6b, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22,
	0x16, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_qproxy_proto_rawDescOnce sync.Once
	file_rpc_qproxy_proto_rawDescData = file_rpc_qproxy_proto_rawDesc
)

func file_rpc_qproxy_proto_rawDescGZIP() []byte {
	file_rpc_qproxy_proto_rawDescOnce.Do(func() {
		file_rpc_qproxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_qproxy_proto_rawDescData)
	})
	return file_rpc_qproxy_proto_rawDescData
}

var file_rpc_qproxy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rpc_qproxy_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_rpc_qproxy_proto_goTypes = []interface{}{
	(QueueId_QueueType)(0),            // 0: rpc.QueueId.QueueType
	(*QueueId)(nil),                   // 1: rpc.QueueId
	(*ListQueuesRequest)(nil),         // 2: rpc.ListQueuesRequest
	(*ListQueuesResponse)(nil),        // 3: rpc.ListQueuesResponse
	(*GetQueueRequest)(nil),           // 4: rpc.GetQueueRequest
	(*GetQueueResponse)(nil),          // 5: rpc.GetQueueResponse
	(*CreateQueueRequest)(nil),        // 6: rpc.CreateQueueRequest
	(*CreateQueueResponse)(nil),       // 7: rpc.CreateQueueResponse
	(*DeleteQueueRequest)(nil),        // 8: rpc.DeleteQueueRequest
	(*DeleteQueueResponse)(nil),       // 9: rpc.DeleteQueueResponse
	(*ModifyQueueRequest)(nil),        // 10: rpc.ModifyQueueRequest
	(*ModifyQueueResponse)(nil),       // 11: rpc.ModifyQueueResponse
	(*PurgeQueueRequest)(nil),         // 12: rpc.PurgeQueueRequest
	(*PurgeQueueResponse)(nil),        // 13: rpc.PurgeQueueResponse
	(*MessageReceipt)(nil),            // 14: rpc.MessageReceipt
	(*FailedPublish)(nil),             // 15: rpc.FailedPublish
	(*Message)(nil),                   // 16: rpc.Message
	(*AckMessagesRequest)(nil),        // 17: rpc.AckMessagesRequest
	(*AckMessagesResponse)(nil),       // 18: rpc.AckMessagesResponse
	(*GetMessagesRequest)(nil),        // 19: rpc.GetMessagesRequest
	(*GetMessagesResponse)(nil),       // 20: rpc.GetMessagesResponse
	(*PublishMessagesRequest)(nil),    // 21: rpc.PublishMessagesRequest
	(*PublishMessagesResponse)(nil),   // 22: rpc.PublishMessagesResponse
	(*ModifyAckDeadlineRequest)(nil),  // 23: rpc.ModifyAckDeadlineRequest
	(*ModifyAckDeadlineResponse)(nil), // 24: rpc.ModifyAckDeadlineResponse
	(*HealthcheckRequest)(nil),        // 25: rpc.HealthcheckRequest
	(*HealthcheckResponse)(nil),       // 26: rpc.HealthcheckResponse
	nil,                               // 27: rpc.GetQueueResponse.AttributesEntry
	nil,                               // 28: rpc.CreateQueueRequest.AttributesEntry
	nil,                               // 29: rpc.ModifyQueueRequest.AttributesEntry
	nil,                               // 30: rpc.Message.AttributesEntry
}
var file_rpc_qproxy_proto_depIdxs = []int32{
	0,  // 0: rpc.QueueId.Type:type_name -> rpc.QueueId.QueueType
	1,  // 1: rpc.ListQueuesResponse.Queues:type_name -> rpc.QueueId
	1,  // 2: rpc.GetQueueRequest.Id:type_name -> rpc.QueueId
	27, // 3: rpc.GetQueueResponse.Attributes:type_name -> rpc.GetQueueResponse.AttributesEntry
	1,  // 4: rpc.CreateQueueRequest.Id:type_name -> rpc.QueueId
	28, // 5: rpc.CreateQueueRequest.Attributes:type_name -> rpc.CreateQueueRequest.AttributesEntry
	1,  // 6: rpc.DeleteQueueRequest.Id:type_name -> rpc.QueueId
	1,  // 7: rpc.ModifyQueueRequest.Id:type_name -> rpc.QueueId
	29, // 8: rpc.ModifyQueueRequest.Attributes:type_name -> rpc.ModifyQueueRequest.AttributesEntry
	1,  // 9: rpc.PurgeQueueRequest.Id:type_name -> rpc.QueueId
	30, // 10: rpc.Message.Attributes:type_name -> rpc.Message.AttributesEntry
	14, // 11: rpc.Message.Receipt:type_name -> rpc.MessageReceipt
	1,  // 12: rpc.AckMessagesRequest.QueueId:type_name -> rpc.QueueId
	14, // 13: rpc.AckMessagesRequest.Receipts:type_name -> rpc.MessageReceipt
	14, // 14: rpc.AckMessagesResponse.Failed:type_name -> rpc.MessageReceipt
	1,  // 15: rpc.GetMessagesRequest.QueueId:type_name -> rpc.QueueId
	16, // 16: rpc.GetMessagesResponse.Messages:type_name -> rpc.Message
	1,  // 17: rpc.PublishMessagesRequest.QueueId:type_name -> rpc.QueueId
	16, // 18: rpc.PublishMessagesRequest.Messages:type_name -> rpc.Message
	15, // 19: rpc.PublishMessagesResponse.Failed:type_name -> rpc.FailedPublish
	1,  // 20: rpc.ModifyAckDeadlineRequest.QueueId:type_name -> rpc.QueueId
	14, // 21: rpc.ModifyAckDeadlineRequest.Receipt:type_name -> rpc.MessageReceipt
	2,  // 22: rpc.QProxy.ListQueues:input_type -> rpc.ListQueuesRequest
	4,  // 23: rpc.QProxy.GetQueue:input_type -> rpc.GetQueueRequest
	6,  // 24: rpc.QProxy.CreateQueue:input_type -> rpc.CreateQueueRequest
	8,  // 25: rpc.QProxy.DeleteQueue:input_type -> rpc.DeleteQueueRequest
	10, // 26: rpc.QProxy.ModifyQueue:input_type -> rpc.ModifyQueueRequest
	12, // 27: rpc.QProxy.PurgeQueue:input_type -> rpc.PurgeQueueRequest
	17, // 28: rpc.QProxy.AckMessages:input_type -> rpc.AckMessagesRequest
	19, // 29: rpc.QProxy.GetMessages:input_type -> rpc.GetMessagesRequest
	21, // 30: rpc.QProxy.PublishMessages:input_type -> rpc.PublishMessagesRequest
	23, // 31: rpc.QProxy.ModifyAckDeadline:input_type -> rpc.ModifyAckDeadlineRequest
	25, // 32: rpc.QProxy.Healthcheck:input_type -> rpc.HealthcheckRequest
	3,  // 33: rpc.QProxy.ListQueues:output_type -> rpc.ListQueuesResponse
	5,  // 34: rpc.QProxy.GetQueue:output_type -> rpc.GetQueueResponse
	7,  // 35: rpc.QProxy.CreateQueue:output_type -> rpc.CreateQueueResponse
	9,  // 36: rpc.QProxy.DeleteQueue:output_type -> rpc.DeleteQueueResponse
	11, // 37: rpc.QProxy.ModifyQueue:output_type -> rpc.ModifyQueueResponse
	13, // 38: rpc.QProxy.PurgeQueue:output_type -> rpc.PurgeQueueResponse
	18, // 39: rpc.QProxy.AckMessages:output_type -> rpc.AckMessagesResponse
	20, // 40: rpc.QProxy.GetMessages:output_type -> rpc.GetMessagesResponse
	22, // 41: rpc.QProxy.PublishMessages:output_type -> rpc.PublishMessagesResponse
	24, // 42: rpc.QProxy.ModifyAckDeadline:output_type -> rpc.ModifyAckDeadlineResponse
	26, // 43: rpc.QProxy.Healthcheck:output_type -> rpc.HealthcheckResponse
	33, // [33:44] is the sub-list for method output_type
	22, // [22:33] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_rpc_qproxy_proto_init() }
func file_rpc_qproxy_proto_init() {
	if File_rpc_qproxy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_qproxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQueuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQueuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgeQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgeQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FailedPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyAckDeadlineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyAckDeadlineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthcheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_qproxy_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthcheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_qproxy_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_qproxy_proto_goTypes,
		DependencyIndexes: file_rpc_qproxy_proto_depIdxs,
		EnumInfos:         file_rpc_qproxy_proto_enumTypes,
		MessageInfos:      file_rpc_qproxy_proto_msgTypes,
	}.Build()
	File_rpc_qproxy_proto = out.File
	file_rpc_qproxy_proto_rawDesc = nil
	file_rpc_qproxy_proto_goTypes = nil
	file_rpc_qproxy_proto_depIdxs = nil
}
